version: 2.1
jobs:
  compile:
   docker:
      - image: ubuntu:20.04
   steps:
      - run:
          command: |
           apt update -y
           apt-get install -y zipalign openssl ccache bc bash git-core gnupg build-essential zip curl make automake autogen autoconf autotools-dev libtool shtool python  m4 gcc libtool zlib1g-dev flex libssl-dev gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi python2
           git clone https://oauth2:${{ secrets.TOKEN }}@github.com/zclkkk/msm-4.14.git --depth=1 -b test
           git clone https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 --depth=1
           mv linux-x86/clang-r428724 clang
           rm -rf linux-x86
           BOARD=raphael
           git clone --depth=1 https://github.com/zclkkk/AnyKernel3 -b main
           CLANG_DIR=../clang
           export KBUILD_BUILD_USER="zclkkk"
           export KBUILD_BUILD_HOST="Server"
           args="O=../out ARCH=arm64 CC=${CLANG_DIR}/bin/clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- LD=${CLANG_DIR}/bin/ld.lld"
           cd msm-4.14
           make ${args} ${BOARD}_defconfig
           make -j16 ${args}
           cd ..
           cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
           cp out/arch/arm64/boot/dtbo.img AnyKernel3/
           cd AnyKernel3
           VERSION="$(cat ../msm-4.14/arch/arm64/configs/${BOARD}_defconfig | grep "CONFIG_LOCALVERSION\=" | sed -r 's/.*"(.+)".*/\1/' | sed 's/^.//')"
           VERSION=KneipKernel_BETA
           7z a -mx9 ${VERSION}.zip *
           zipalign -v 4 ${VERSION}.zip ../${VERSION}_${BOARD}.zip
           cd ..
           curl -sL https://git.io/file-transfer | bash -s beta
           ./transfer gof ${VERSION}_${BOARD}.zip
workflows:
  version: 2.1
  cooking:
    jobs:
      - compile
